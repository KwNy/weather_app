{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/App.js\";\nimport React from 'react';\nimport Form from './Form.js';\nimport Result from './Result.js';\nimport './App.css'; // const APIkey = \n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      city: '',\n      sunrise: '',\n      sunset: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      err: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  //   handleCitySubmit = e => {\n  //     //powstrzymaj odswiezanie strony//\n  //     e.preventDefault();\n  //     const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8`\n  //     console.log(\"potwierdzony formularz\")\n  // //albo odrzucony - catch albo spelniony -then\n  //     fetch(API)\n  //       .then(response =>{\n  //         if(response.ok){\n  //           return response\n  //         }\n  //         throw Error('Error occurced')\n  //       })\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         const time = new Date().toLocaleString();\n  //         //uzywam funkcji zwracjaacej obiekt\n  //         this.setState(prevState => ({\n  //           err:false,\n  //           date: time,\n  //           city: this.state.value,\n  //           sunrise: data.sys.sunrise,\n  //           sunset: data.sys.sunset,\n  //           temp: data.main.temp,\n  //           pressure: data.main.pressure,\n  //           wind:data.wind.speed,\n  //       }))\n  //     })\n  //       .catch(err => err => {\n  //         this.setState({\n  //           err:true,\n  //           city: this.state.value\n  //         })\n  //       })\n  //   }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value.length === 0) return;\n\n    if (prevProps.value !== this.state.value) {\n      const API = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.value, \"&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8\");\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error('Error occurced');\n      }).then(response => response.json()).then(data => {\n        const time = new Date().toLocaleString(); //uzywam funkcji zwracjaacej obiekt\n\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: this.state.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed\n        }));\n      }).catch(err => err => {\n        this.setState({\n          err: true,\n          city: this.state.value\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Check the weather\", React.createElement(Form, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Result, {\n      weather: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n} //version with submit button \n\n\n{\n  /* submit={this.handleCitySubmit} */\n}\nexport default App;","map":{"version":3,"sources":["/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/App.js"],"names":["React","Form","Result","App","Component","state","value","date","city","sunrise","sunset","temp","pressure","wind","err","handleInputChange","e","setState","target","componentDidUpdate","prevProps","prevState","length","API","fetch","then","response","ok","Error","json","data","time","Date","toLocaleString","sys","main","speed","catch","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Form from './Form.js';\nimport Result from './Result.js';\nimport './App.css';\n\n// const APIkey = \n\nclass App extends React.Component {\n\n  //stany poczatkowe do zmiany\n  state =  {\n    value: '',\n    date:'',\n    city:'',\n    sunrise:'',\n    sunset:'',\n    temp: '',\n    pressure:'',\n    wind:'',\n    err: '',\n  }\n\n  handleInputChange = (e) => {\n     this.setState({\n       value: e.target.value\n     })\n   }\n\n//   handleCitySubmit = e => {\n//     //powstrzymaj odswiezanie strony//\n//     e.preventDefault();\n//     const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8`\n//     console.log(\"potwierdzony formularz\")\n// //albo odrzucony - catch albo spelniony -then\n\n//     fetch(API)\n//       .then(response =>{\n//         if(response.ok){\n//           return response\n//         }\n//         throw Error('Error occurced')\n//       })\n//       .then(response => response.json())\n//       .then(data => {\n//         const time = new Date().toLocaleString();\n\n//         //uzywam funkcji zwracjaacej obiekt\n//         this.setState(prevState => ({\n//           err:false,\n//           date: time,\n//           city: this.state.value,\n//           sunrise: data.sys.sunrise,\n//           sunset: data.sys.sunset,\n//           temp: data.main.temp,\n//           pressure: data.main.pressure,\n//           wind:data.wind.speed,\n         \n//       }))\n//     })\n//       .catch(err => err => {\n//         this.setState({\n//           err:true,\n//           city: this.state.value\n//         })\n//       })\n    \n\n//   }\n\ncomponentDidUpdate(prevProps, prevState){\n\n  if(this.state.value.length === 0) return \n\n  if(prevProps.value !== this.state.value){\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8`;\n        fetch(API)\n      .then(response =>{\n        if(response.ok){\n          return response\n        }\n        throw Error('Error occurced')\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleString();\n\n        //uzywam funkcji zwracjaacej obiekt\n        this.setState(prevState => ({\n          err:false,\n          date: time,\n          city: this.state.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind:data.wind.speed,\n         \n      }))\n    })\n      .catch(err => err => {\n        this.setState({\n          err:true,\n          city: this.state.value\n        })\n      })\n  }\n}\n\n\n  render() {\n    return (\n      <div className=\"App\"> Check the weather\n      <Form value = {this.state.value} change={this.handleInputChange} />\n\n\n      <Result weather={this.state}/>\n      </div>\n    );\n  }\n}\n\n//version with submit button \n      {/* submit={this.handleCitySubmit} */}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}