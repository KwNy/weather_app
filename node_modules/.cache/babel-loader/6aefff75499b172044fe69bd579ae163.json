{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/App.js\";\nimport React from 'react';\nimport Form from './Form.js';\nimport Result from './Result.js';\nimport './App.css'; // const APIkey = \n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      city: '',\n      sunrise: '',\n      sunset: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      err: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleCitySubmit = e => {\n      //powstrzymaj odswiezanie strony//\n      e.preventDefault();\n      const API = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(this.state.value, \"&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8\");\n      console.log(\"potwierdzony formularz\"); //albo odrzucony - catch albo spelniony -then\n\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error('Error occurced');\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          error: false\n        });\n      }).catch(err => err => {\n        this.setState({\n          eror: true\n        });\n      });\n    };\n  }\n\n  //konstruuje api \n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Check the weather\", React.createElement(Form, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Result, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/App.js"],"names":["React","Form","Result","App","Component","state","value","date","city","sunrise","sunset","temp","pressure","wind","err","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","console","log","fetch","then","response","ok","Error","json","data","error","catch","eror","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,KAHgC,GAGvB;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,IAAI,EAAC,EAFE;AAGPC,MAAAA,IAAI,EAAC,EAHE;AAIPC,MAAAA,OAAO,EAAC,EAJD;AAKPC,MAAAA,MAAM,EAAC,EALA;AAMPC,MAAAA,IAAI,EAAE,EANC;AAOPC,MAAAA,QAAQ,EAAC,EAPF;AAQPC,MAAAA,IAAI,EAAC,EARE;AASPC,MAAAA,GAAG,EAAE;AATE,KAHuB;;AAAA,SAehCC,iBAfgC,GAeXC,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEU,CAAC,CAACE,MAAF,CAASZ;AADJ,OAAd;AAGD,KAnB8B;;AAAA,SAqBhCa,gBArBgC,GAqBbH,CAAC,IAAI;AACtB;AACAA,MAAAA,CAAC,CAACI,cAAF;AACA,YAAMC,GAAG,8DAAuD,KAAKhB,KAAL,CAAWC,KAAlE,yDAAT;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAJsB,CAK1B;;AAEIC,MAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAG;AACf,YAAGA,QAAQ,CAACC,EAAZ,EAAe;AACb,iBAAOD,QAAP;AACD;;AACD,cAAME,KAAK,CAAC,gBAAD,CAAX;AACD,OANH,EAOGH,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAPpB,EAQGJ,IARH,CAQQK,IAAI,IAAI;AACZ,aAAKb,QAAL,CAAc;AAACc,UAAAA,KAAK,EAAC;AAAP,SAAd;AAEH,OAXD,EAYGC,KAZH,CAYSlB,GAAG,IAAIA,GAAG,IAAI;AACnB,aAAKG,QAAL,CAAc;AACZgB,UAAAA,IAAI,EAAC;AADO,SAAd;AAGD,OAhBH;AAmBD,KA/C+B;AAAA;;AAiDhC;AAIAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAI,KAAK7B,KAAL,CAAWC,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKS,iBAA9C;AAAiE,MAAA,MAAM,EAAE,KAAKI,gBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AA5D+B;;AAkElC,eAAehB,GAAf","sourcesContent":["import React from 'react';\n\nimport Form from './Form.js';\nimport Result from './Result.js';\nimport './App.css';\n\n// const APIkey = \n\nclass App extends React.Component {\n\n  //stany poczatkowe do zmiany\n  state =  {\n    value: '',\n    date:'',\n    city:'',\n    sunrise:'',\n    sunset:'',\n    temp: '',\n    pressure:'',\n    wind:'',\n    err: '',\n  }\n\n  handleInputChange = (e) => {\n     this.setState({\n       value: e.target.value\n     })\n   }\n\n  handleCitySubmit = e => {\n    //powstrzymaj odswiezanie strony//\n    e.preventDefault();\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=dc35d37db384d42daf570cc6c707a5e8`\n    console.log(\"potwierdzony formularz\")\n//albo odrzucony - catch albo spelniony -then\n\n    fetch(API)\n      .then(response =>{\n        if(response.ok){\n          return response\n        }\n        throw Error('Error occurced')\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({error:false\n      })\n    })\n      .catch(err => err => {\n        this.setState({\n          eror:true\n        })\n      })\n    \n\n  }\n\n  //konstruuje api \n\n\n\n  render() {\n    return (\n      <div className=\"App\"> Check the weather\n      <Form value = {this.state.value} change={this.handleInputChange} submit={this.handleCitySubmit}/>\n      <Result/>\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}