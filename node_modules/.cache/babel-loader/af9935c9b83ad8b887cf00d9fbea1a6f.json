{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/Result.js\";\nimport React from 'react';\nimport './Result.css'; // import './Form.css';\n\nconst Result = props => {\n  const _props$weather = props.weather,\n        err = _props$weather.err,\n        city = _props$weather.city,\n        date = _props$weather.date,\n        sunrise = _props$weather.sunrise,\n        sunset = _props$weather.sunset,\n        temp = _props$weather.temp,\n        pressure = _props$weather.pressure,\n        wind = _props$weather.wind,\n        description = _props$weather.description,\n        icon = _props$weather.icon;\n  let content = null;\n\n  if (!err && city) {\n    //sunrise without miliseconds -> change it \n    const sunriseTime = new Date(sunrise * 1000).toLocaleString();\n    const sunsetTime = new Date(sunset * 1000).toLocaleString();\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Search result: \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, city)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Current temperature: \", temp, \" \\xB0C\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, description), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, icon));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, err ? \"not available \".concat(city) : content);\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/katarzynawegorek/Desktop/cwiczenia_z_samurajem/apliakcja-pogodowa/weather_app/src/components/Result.js"],"names":["React","Result","props","weather","err","city","date","sunrise","sunset","temp","pressure","wind","description","icon","content","sunriseTime","Date","toLocaleString","sunsetTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP,C,CAEA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,yBAC0DA,KAAK,CAACC,OADhE;AAAA,QACjBC,GADiB,kBACjBA,GADiB;AAAA,QACZC,IADY,kBACZA,IADY;AAAA,QACNC,IADM,kBACNA,IADM;AAAA,QACDC,OADC,kBACDA,OADC;AAAA,QACQC,MADR,kBACQA,MADR;AAAA,QACgBC,IADhB,kBACgBA,IADhB;AAAA,QACsBC,QADtB,kBACsBA,QADtB;AAAA,QACgCC,IADhC,kBACgCA,IADhC;AAAA,QACqCC,WADrC,kBACqCA,WADrC;AAAA,QACkDC,IADlD,kBACkDA,IADlD;AAExB,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAG,CAACV,GAAD,IAAQC,IAAX,EAAgB;AACZ;AACA,UAAMU,WAAW,GAAG,IAAIC,IAAJ,CAAST,OAAO,GAAG,IAAnB,EAAyBU,cAAzB,EAApB;AACA,UAAMC,UAAU,GAAG,IAAIF,IAAJ,CAASR,MAAM,GAAG,IAAlB,EAAwBS,cAAxB,EAAnB;AACAH,IAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,IAAL,CAAnB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0BI,IAA1B,WAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,WAAL,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CAJJ,CADJ;AAeH;;AAID,SACQ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,GAAG,2BAAoBC,IAApB,IACHS,OAFL,CADR;AAQC,CAnCD;;AAqCA,eAAeb,MAAf","sourcesContent":["import React from 'react';\nimport './Result.css'\n\n// import './Form.css';\n\nconst Result = props => {\nconst {err, city, date,sunrise, sunset, temp, pressure, wind,description, icon} = props.weather \nlet content = null;\n\nif(!err && city){\n    //sunrise without miliseconds -> change it \n    const sunriseTime = new Date(sunrise * 1000).toLocaleString();\n    const sunsetTime = new Date(sunset * 1000).toLocaleString();\n    content = (\n        <div> \n            <h2>Search result: <em>{city}</em></h2>\n            <h4>Current temperature: {temp} &#176;C</h4>\n            <h4>{description}</h4>\n            <h4>{icon}</h4>\n\n            {/* <h4>Date and time: {date}</h4>\n            <h4>Current temperature: {temp} &#176;C</h4>\n            <h4>Sunrise: {sunriseTime}</h4>\n            <h4>Sunset: {sunsetTime}</h4>\n            <h4>Pressure: {pressure} hPa</h4>\n            <h4>Wind: {wind} m/s</h4> */}\n        </div>\n    )\n}\n\n\n\nreturn (\n        <div className=\"Result\">\n            {err ? `not available ${city}` \n            :content}\n        </div>\n\n\n  );\n}\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}